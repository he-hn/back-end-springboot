{"version":3,"file":"js/menu07.18bb152a.js","mappings":"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","sources":["webpack://front-end-vue/./node_modules/js-file-download/file-download.js","webpack://front-end-vue/./src/apis/board.js","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue?55f4","webpack://front-end-vue/./src/components/menu07/AlertDialog.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue?f41b","webpack://front-end-vue/./src/views/menu07/auth/Join.vue","webpack://front-end-vue/./src/views/menu07/auth/Join.vue?8402","webpack://front-end-vue/./src/views/menu07/auth/Login.vue","webpack://front-end-vue/./src/views/menu07/auth/Login.vue?70bd","webpack://front-end-vue/./src/views/menu07/board/List.vue","webpack://front-end-vue/./src/views/menu07/board/List.vue?5f9a","webpack://front-end-vue/./src/views/menu07/board/Read.vue","webpack://front-end-vue/./src/views/menu07/board/Read.vue?a213","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue?f0df","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue?b13f"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import axios from \"axios\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\n//게시물 목록 요청\r\nasync function getBoardList(pageNo=1) {\r\n  let response = null;\r\n  try {\r\n    response = await axios.get(\"/board/list\", {params:{pageNo}}); //params: 쿼리 스트링 방식으로 넘어간다. response객체를 retun.\r\n    //console.log(response);\r\n    return {result: \"success\", data: response.data};\r\n  } catch(error) {\r\n    //서버 응답이 있다.\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          response = await axios.get(\"/board/list\", {params:{pageNo}});\r\n          return {result: \"success\", data: response.data};\r\n        }\r\n      }\r\n    } else {\r\n      //네트워크 오류\r\n      return {result: \"fail-network\"};\r\n    }\r\n  }\r\n}\r\n\r\n//게시물 쓰기(멀티 파트로 구성해서 전달)\r\n//자체가 비동기. promise효과를 준다.\r\nasync function createBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.post(\"/board/\", multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch(error) {\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          const response = await axios.post(\"/board/\", multipartFormData);\r\n          dbBoard = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n//게시물 가져오기\r\nasync function readBoard(bno, hit) {\r\n  let board = null;\r\n  try {\r\n    const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n    board = response.data;\r\n  } catch(error) {\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n          board = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\n//파일 다운로드\r\nasync function downloadBoardAttach(bno) {\r\n  let blob = null;\r\n  try {\r\n    const response = await axios.get(`/board/battach/${bno}`, {responseType: \"blob\"});\r\n    blob = response.data;\r\n  } catch(error) {\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          const response = await axios.get(`/board/battach/${bno}`, {responseType: \"blob\"});\r\n          blob = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return blob;\r\n}\r\n\r\n//게시물 삭제\r\nasync function deleteBoard(bno) {\r\n  let result = null;\r\n  try {\r\n    const response = await axios.delete(`/board/${bno}`);\r\n    result = response.data.result;\r\n  } catch(error) {\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          const response = await axios.delete(`/board/${bno}`);\r\n          result = response.data.result;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n//게시물 수정\r\nasync function updateBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.put(`/board/`, multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch(error) {\r\n    if(error.response) {\r\n      if(error.response.status === 403) {\r\n        if(await apiAuth.refreshToken()) {\r\n          const response = await axios.put(`/board/`, multipartFormData);\r\n          dbBoard = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n//내보내기\r\nexport default {\r\n  getBoardList,\r\n  createBoard,\r\n  readBoard,\r\n  downloadBoardAttach,\r\n  deleteBoard,\r\n  updateBoard\r\n}\r\n\r\n//board는 통신 모듈이다.\r\n//비동기로 작성해야 한다. axios.get 자체가 promise를 return 한다. promise는 async await 방법과 promise 직접 이용(then, cathc, fianlly)이 있다 ","<template>\r\n  <Transition name=\"modal\">\r\n    <div class=\"modal-mask\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\" :style=\"$attrs.style\">\r\n          <div class=\"modal-header\">\r\n            <!-- slot -->\r\n            <slot name=\"header\">default header</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\">\r\n            <!-- slot -->\r\n            <slot name=\"body\">default body</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <!-- slot -->\r\n            <slot name=\"footer\">\r\n              default footer\r\n              <button class=\"modal-default-button\" @click=\"$emit('close')\">OK</button>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script setup></script>\r\n\r\n<script>\r\n  export default {\r\n    inheritAttrs: false\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #42b983;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>","import { render } from \"./ModalDialogTemplate.vue?vue&type=template&id=3d80d878&scoped=true\"\nimport script from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ModalDialogTemplate.vue?vue&type=style&index=0&id=3d80d878&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\osstem\\\\projects\\\\node-workspace\\\\front-end-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3d80d878\"]])\n\nexport default __exports__","import script from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01AsyncControl</div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">비동기 작업1</button>\r\n        <button @click=\"handleBtn2\" class=\"btn btn-info btn-sm mr-2\">비동기 작업2</button>\r\n      </div>\r\n\r\n      <div v-if=\"!loading\" class=\"mt-3\">\r\n        <div>result: {{ result }}</div>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"mt-3 spinner-border text-secondary\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst result = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nfunction handleBtn1() {\r\n  loading.value = true;\r\n  work()\r\n    .then((data) => {\r\n      result.value = data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      loading.value = false;\r\n    });\r\n}\r\n\r\nasync function handleBtn2() {\r\n  try {\r\n    loading.value = true;\r\n    const data = await work();\r\n    result.value = data;\r\n  } catch(error) {\r\n    console.log(error)\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\nfunction work() {\r\n  const promise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(\"value\");\r\n    }, 3000);\r\n  });\r\n  return promise;\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Join</div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User ID</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.id\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User Name</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.name\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Password</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Role</label>\r\n        <select class=\"form-control\" name=\"mrole\" v-model=\"user.role\">\r\n          <option value=\"ROLE_ADMIN\">ROLE_ADMIN</option>\r\n          <option value=\"ROLE_MANAGER\">ROLE_MANAGER</option>\r\n          <option value=\"ROLE_USER\" selected>ROLE_USER</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Email</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.email\" />\r\n      </div>\r\n      <button class=\"btn btn-info btn-sm\" v-on:click=\"handleJoin\">가입</button>\r\n    </div>\r\n\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog=false\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue';\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from '@/components/menu07/AlertDialog.vue';\r\n\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  name: \"사용자\",\r\n  password: \"12345\",\r\n  role: \"ROLE_USER\",\r\n  email: \"user@mycompany.com\"\r\n});\r\n\r\nasync function handleJoin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n\r\n  const result = await apiAuth.join(user);\r\n  \r\n  if(result === \"success\") {\r\n    alertDialogMessage.value = \"회원 가입 성공\";\r\n  }  else if (result === \"duplicated\") {\r\n    alertDialogMessage.value = \"회원 가입 실패: 아이디 중복\";\r\n  } else if (result === \"fail\") {\r\n     alertDialogMessage.value = \"회원 가입 실패: 서버측 오류\";\r\n  }  else {\r\n     alertDialogMessage.value = \"회원 가입 실패: 네트워크 오류\";\r\n  }\r\n\r\n  loading.value = false;\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Join.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Join.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      로그인\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"store.state.userId === ''\">  \r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">User ID</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userId\" v-model=\"user.id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"userPassword\" class=\"col-form-label\">User Password</label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n        </div>\r\n        <button class=\"btn btn-info btn-sm\" v-on:click=\"handleLogin\">로그인</button>\r\n      </div>\r\n\r\n      <div v-if=\"store.state.userId !== ''\">\r\n        <button class=\"btn btn-info btn-sm mr-2\" v-on:click=\"handleLogout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog=false\" />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst alertDialog= ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  password: \"12345\"\r\n});\r\n\r\nasync function handleLogin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n\r\n\r\n  const result = await apiAuth.login(user);\r\n  if (result === \"success\") {\r\n    alertDialog.value = false;\r\n    //router.push(`....`);\r\n  } else if (result === \"fail-401\") {\r\n    alertDialogMessage.value = \"로그인 실패: 아이디 또는 패스워드 틀림\";\r\n  } else {\r\n    alertDialogMessage.value = \"로그인 실패: 네트워크 에러\";\r\n  }\r\n\r\n  loading.value = false;\r\n}\r\n\r\nasync function handleLogout() {\r\n  await apiAuth.logout();\r\n  //logout 자체가 async 이다. 따라서 이 안에서는 동기로 받아서 진행한다.\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      List\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"page != null\">\r\n        <div class=\"mb-3\">\r\n          <router-link to=\"/menu07/board/writeform\" class=\"btn btn-info btn-sm\">생성</router-link>\r\n        </div>\r\n\r\n        <table class=\"table table-sm table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 70px\">번호</th>\r\n              <th class=\"text-center\">제목</th>\r\n              <th class=\"text-center\" style=\"width: 90px\">글쓴이</th>\r\n              <th class=\"text-center\" style=\"width: 120px\">날짜</th>\r\n              <th class=\"text-center\" style=\"width: 70px\">조회수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in page.boards\" :key=\"board.bno\">\r\n              <td class=\"text-center\">{{board.bno}}</td>\r\n              <td>\r\n                <router-link :to=\"`/menu07/board/read?bno=${board.bno}&pageNo=${page.pager.pageNo}&hit=true`\">{{board.btitle}}</router-link>\r\n              </td>\r\n              <td class=\"text-center\">{{board.mid}}</td>\r\n              <td class=\"text-center\">{{new Date(board.bdate).toLocaleDateString()}}</td>\r\n              <td class=\"text-center\">{{board.bhitcount}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"5\" class=\"text-center\">\r\n                <button @click=\"changePageNo(1)\" class=\"btn btn-outline-primary btn-sm mr-1\">처음</button>\r\n                <button v-if=\"page.pager.groupNo > 1\" @click=\"changePageNo(page.pager.startPageNo-1)\" class=\"btn btn-outline-info btn-sm mr-1\">이전</button>\r\n                <!--<button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" @click=\"changePageNo(pageNo)\" class=\"btn btn-outline-success btn-sm mr-1\" :class=\"{'btn-outline-success':(page.pager.pageNo!=pageNo), 'btn-danger':(page.pager.pageNo==pageNo)}\">{{pageNo}}</button>-->\r\n                <button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" @click=\"changePageNo(pageNo)\" class=\"btn btn-outline-success btn-sm mr-1\" :class=\"(page.pager.pageNo==pageNo)? 'btn-danger':'btn-outline-success'\">{{pageNo}}</button>\r\n                <button v-if=\"page.pager.groupNo < page.pager.totalGroupNo\" @click=\"changePageNo(page.pager.endPageNo+1)\" class=\"btn btn-outline-info btn-sm mr-1\">다음</button>\r\n                <button @click=\"changePageNo(page.pager.totalPageNo)\" class=\"btn btn-outline-primary btn-sm mr-1\">맨끝</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiBoard from \"@/apis/board\";\r\nimport { ref, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n//로그인 하지 않고 리스트 목록을 누르면 리스트가 잠깐 뜨고 나서 로그인창으로 이동한다. 리스트가 뜨지 않고 바로 로그인 창으로 가도록 하기 위해서는 돔이 생성되기 전에 먼저 store에 userId 가 있는지를 확인하고, userId가 있지 않다면 바로 로그인 창으로 가도록 한다\r\nconst store = useStore();\r\nif (store.state.userId === '') {\r\n  router.push(\"/menu07/auth/login\") \r\n}\r\n\r\n//반응형 속성 선언\r\nconst page = ref(null); //template을 바인딩 하기 위해서는 반응형 속성으로 만들어야 한다\r\n//null 인 상태에서 바인딩을 하면 문제가 생긴다. erro가 발생했다가 데이터가 들어오면서 화면이 나오게 된다. -> 해결하기 위해서 async이용\r\n\r\n//라우팅시에 전달된 Query String에서 pageNo를 읽기\r\nlet pageNo = route.query.pageNo; \r\nif(pageNo === \"Undefined\") {\r\n  pageNo = 1;\r\n}\r\n\r\n//Rest API와 통신해서 페이지에 대한 정보(게시물 목록+페이지)를 page 속성에 저장\r\nasync function getBoardList(pageNo) {\r\n  const result = await apiBoard.getBoardList(pageNo);\r\n  //if(result != null) {\r\n  if(result.result === \"success\") {\r\n    page.value = result.data;\r\n  } else {\r\n    router.push(\"/menu07/auth/login\");\r\n  }\r\n}\r\ngetBoardList(pageNo);\r\n//async이기 때문에 비하인드에서 계속 작업을 실행중이다. mounted 된 후에 실행될 수 있다\r\n\r\nfunction range(start, end) {\r\n  const numbers = [];\r\n  for(var i=start; i<=end; i++) {\r\n    numbers.push(i);\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction changePageNo(pageNo) {\r\n  router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n}\r\n\r\nwatch(route, (newUrl, oldUrl) => {\r\n  //console.log(newUrl)\r\n  if(newUrl.path === \"/menu07/board/list\") {\r\n    if(newUrl.query.pageNo) {\r\n      getBoardList(newUrl.query.pageNo);\r\n    } else {\r\n      getBoardList(1);\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Read\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <!-- getBoard를 호출하면 비동기로 실행. 응답을 주기 전에 dom이 생성될 수 있기 때문에 null일 때는 바인딩을 해서는 안된다. null일 때만 바인딩 하도록 한다-->\r\n      <div v-if=\"board != null\">\r\n        <div class=\"d-flex\">\r\n          <div>\r\n            <p>bno: {{board.bno}}</p>\r\n            <p>btitle: {{board.btitle}}</p>\r\n            <p>bcontent: {{board.bcontent}}</p>\r\n            <p>mid: {{board.mid}}</p>\r\n            <p>bdate: {{new Date(board.bdate).toLocaleDateString()}}</p>\r\n            <p>bhitcount: {{board.bhitcount}}</p>\r\n            <p v-if=\"board.battachoname != null\">\r\n              battachoname: {{board.battachoname}}\r\n              <button @click=\"downloadBattach\" class=\"btn btn-info btn-sm ml-2\">다운로드</button>\r\n            </p>\r\n          </div>\r\n          <div class=\"ml-5\">\r\n            <img v-if=\"board.battachoname != null\" :src=\"battach\" width=\"300\"/>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <router-link :to=\"`/menu07/board/list?pageNo=${pageNo}`\" class=\"btn btn-info btn-sm mr-2\">목록</router-link>\r\n          <router-link :to=\"`/menu07/board/updateform?bno=${bno}&pageNo=${pageNo}`\" \r\n            class=\"btn btn-info btn-sm mr-2\">수정</router-link>\r\n          <button class=\"btn btn-info btn-sm mr-2\" @click=\"handleRemove\">삭제</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nimport { ref } from \"vue\";\r\n\r\n//npm install js-file-download\r\nimport fileDownload from \"js-file-download\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\nconst hit = route.query.hit;\r\nconst board = ref(null);\r\nconst battach = ref(null); //이미지를 바로 저장 하는 것이 아니라 url을 받아서 연결을 한다\r\n\r\n//동기방식으로 하고 있기 때문에 await apiBoard.readBoard(bno, hit); 이 메소드가 끝나야지 await apiBoard.downloadBoardAttach(bno); 사진을 가져오는 메소드가 실행된다. 속도의 문제가 있다. 사진 가져오는 속도를 빠르게 하기 위해서는 await를 써서는 안된다. \r\n/* async function getBoard() {\r\n  const dbBoard = await apiBoard.readBoard(bno, hit);\r\n  board.value = dbBoard;\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null) {\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n} */\r\n\r\nasync function getBoard() {\r\n  //apiBoard.readBoard 비동기로 작용 하기 때문에 바로 await apiBoard.downloadBoardAttach(bno); 이 실행된다. 속도 문제를 개선할 수 있다.\r\n  apiBoard.readBoard(bno, hit)\r\n  .then((data) => {\r\n    board.value = data;\r\n  });\r\n\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null) {\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\n\r\n//두 개 다 비동기로 해도 되지만 굳이 둘 다 비동기로 할 필요는 없다. 바로 이어서 실행되기 때문이다.\r\n/* async function getBoard() {\r\n  apiBoard.readBoard(bno, hit)\r\n  .then((data) => {\r\n    board.value = data;\r\n  });\r\n  apiBoard.downloadBoardAttach(bno)\r\n  .then((blob) => {\r\n    if(blob != null) {\r\n      battach.value = URL.createObjectURL(blob);\r\n    }\r\n  });\r\n} */\r\ngetBoard();\r\n\r\nasync function downloadBattach() {\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null) {\r\n    fileDownload(blob, board.value.battachoname);\r\n  }\r\n}\r\n\r\nasync function handleRemove() {\r\n  const result = await apiBoard.deleteBoard(bno);\r\n  if (result === \"success\") {\r\n    router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      WriteFrom\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <form v-if=\"board\" v-on:submit.prevent=\"handleUpdate\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"newBattach\" @change=\"previewImg\"/> <!-- ref 참조를 통해서 첨부 파일의 정보를 확인한다 -->\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <img :src=\"battach\" width=\"200\" /> <!-- 서버에 src를 넣을 수 없으므로 axio를 이용하여 메모리에 저장된 바이너리 파일을 읽어온다 -->\r\n        </div>\r\n\r\n        <div class=\"form-group row mt-3\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"수정\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst board = ref(null);\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\nconst newBattach = ref(null);\r\nconst battach = ref(null);\r\n\r\nasync function getBoard() {\r\n  const dbBaord = await apiBoard.readBoard(bno, false);\r\n  board.value = dbBaord;\r\n\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null) {\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n//getBarod()가 비동기로 진행되기 때문에 getBoard()가 실행되어 받아오기 전까지 딜레이가 있다. 때문에 v-if로 board의 여부를 확인한 후 바인딩 한다.\r\n\r\nasync function handleUpdate() {\r\n  const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\", board.value.btitle);\r\n  multipartFormData.append(\"bcontent\", board.value.bcontent);\r\n  multipartFormData.append(\"bno\", board.value.bno);\r\n  if(newBattach.value.files.length != 0) {\r\n    multipartFormData.append(\"battach\", newBattach.value.files[0]);\r\n  }\r\n  await apiBoard.updateBoard(multipartFormData);\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction handleCance() {\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction previewImg() {\r\n  if(newBattach.value.files.length != 0) {\r\n    battach.value = URL.createObjectURL(newBattach.value.files[0]);\r\n  } else {\r\n    battach.value = null;\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      WriteFrom\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <form v-on:submit.prevent=\"handleAdd\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"battach\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"추가\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\"\r\nimport { useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\nconst router = useRouter();\r\n\r\nconst board = reactive({\r\n  btitle: \"\",\r\n  bcontent: \"\"\r\n});\r\n\r\nconst battach = ref(null);\r\n\r\n//해당 method가 비동기 이기 때문에 createBoard 까지 비동기로 할 필요가 없다\r\nasync function handleAdd() {\r\n  const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\", board.btitle);\r\n  multipartFormData.append(\"bcontent\", board.bcontent);\r\n  multipartFormData.append(\"mid\", \"user\");\r\n  if(battach.value.files.length != 0) {\r\n    multipartFormData.append(\"battach\", battach.value.files[0]);\r\n  }\r\n  await apiBoard.createBoard(multipartFormData);\r\n  router.push(\"/menu07/board/list\")\r\n}\r\n\r\nfunction handleCancel() {\r\n  router.push(\"/menu07/board/list\")\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["module","exports","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","async","getBoardList","pageNo","response","axios","params","result","error","status","apiAuth","createBoard","multipartFormData","dbBoard","readBoard","bno","hit","board","downloadBoardAttach","responseType","deleteBoard","updateBoard","class","_createBlock","_Transition","name","_createElementVNode","_ctx","_renderSlot","onClick","inheritAttrs","__exports__","render","ref","loading","handleBtn1","value","work","then","catch","console","log","finally","handleBtn2","promise","Promise","resolve","reject","alertDialog","alertDialogMessage","user","reactive","id","password","role","email","handleJoin","store","useStore","useRouter","handleLogin","handleLogout","route","useRoute","router","state","userId","push","page","query","apiBoard","range","start","end","numbers","i","changePageNo","watch","newUrl","oldUrl","path","battach","getBoard","downloadBattach","fileDownload","battachoname","handleRemove","newBattach","dbBaord","handleUpdate","FormData","append","btitle","bcontent","files","length","previewImg","handleAdd","handleCancel"],"sourceRoot":""}