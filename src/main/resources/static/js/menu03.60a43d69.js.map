{"version":3,"file":"js/menu03.60a43d69.js","mappings":"wpBAkCA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,IAGnB,SAASC,IACPC,QAAQC,IAAI,mBAGd,SAASC,EAAWC,EAASC,GAC3BJ,QAAQC,IAAI,kBACZD,QAAQC,IAAI,YAAcE,GAC1BH,QAAQC,IAAIG,GACZJ,QAAQC,IAAIG,EAAMC,QAGpB,SAASC,EAAYF,GACnBJ,QAAQC,IAAI,yBACZD,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAIG,EAAMC,OAAOE,MACzBP,QAAQC,IAAIG,EAAMC,OAAOG,OACzBX,EAAOW,MAAQJ,EAAMC,OAAOG,MAG9B,SAASC,IACPT,QAAQC,IAAI,cAGd,SAASS,IACPV,QAAQC,IAAI,c,oxBC1Dd,MAAMU,EAAc,EAEpB,S,2tBCsCA,MAAMd,GAASC,EAAAA,EAAAA,IAAI,IACbc,GAAUd,EAAAA,EAAAA,IAAI,CAClBS,KAAM,GACNM,QAAS,GACTC,MAAO,IAsCT,SAASC,IACPH,EAAQJ,MAAQ,CACdD,KAAM,GACNM,QAAS,GACTC,MAAO,G,OAtCXE,EAAAA,EAAAA,IAAMnB,GAAQ,CAACoB,EAAWC,KACxBlB,QAAQmB,MAAM,gBACdnB,QAAQC,IAAI,cAAegB,GAC3BjB,QAAQC,IAAI,aAAciB,GAC1BlB,QAAQoB,eAIVJ,EAAAA,EAAAA,IAAMJ,GACJ,CAACS,EAAYC,KACXtB,QAAQmB,MAAM,iBACdnB,QAAQC,IAAI,eAAgBoB,GAC5BrB,QAAQC,IAAI,cAAeqB,GAC3BtB,QAAQoB,aAEV,CAACG,MAAM,KAITP,EAAAA,EAAAA,KAAM,IAAMJ,EAAQJ,MAAMD,OAAM,CAACiB,EAASC,KACxCzB,QAAQmB,MAAM,6BACdnB,QAAQC,IAAI,YAAauB,GACzBxB,QAAQC,IAAI,WAAYwB,GACxBzB,QAAQoB,eAIVJ,EAAAA,EAAAA,IAAM,CAACnB,EAAQe,IAAU,EAAEK,EAAWI,IAAcH,EAAWI,MAC7DtB,QAAQmB,MAAM,mBACdnB,QAAQC,IAAI,YAAa,CAACgB,EAAWI,IACrCrB,QAAQC,IAAI,WAAY,CAACiB,EAAWI,IACpCtB,QAAQoB,aACP,CAACG,MAAM,I,+5BChFV,MAAMZ,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue","webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue?efde","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue?3b92"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam01EventHandling\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>[Event Handling]</h6>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">버튼1</button>\r\n        <button @click=\"handleBtn2('vue is good', $event)\" class=\"btn btn-info btn-sm mr-2\">버튼2</button>\r\n      </div>\r\n      <div>\r\n        <h6>[DOM Event 객체 참조]</h6>\r\n        <input type=\"text\" name=\"userId\" :value=\"userId\" @keyup=\"handleInput($event)\" />\r\n        <br />\r\n        입력 내용: {{userId}}\r\n      </div>\r\n\r\n      <div>\r\n        <h6>[이벤트 수식어 사용]</h6>\r\n        <a href=\"https://vuejs.org/guide/introduction.html\" @click.prevent=\"handleLink\">링크</a>\r\n        <form action=\"https://vuejs.org/guide/introduction.html\" @submit.prevent=\"handleForm\">\r\n          <input type=\"text\" v-model=\"userId\" /> <br />\r\n          <input type=\"submit\" value=\"제출\" class=\"btn btn-success btn-sm mt-2\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\n//반응형 속성 선언\r\nconst userId = ref(\"\");\r\n\r\n//메소드 선언\r\nfunction handleBtn1() {\r\n  console.log(\"handleBtn1() 실행\");\r\n}\r\n\r\nfunction handleBtn2(message, event) {\r\n  console.log(\"handleBtn2( 실행\");\r\n  console.log(\"message: \" + message);\r\n  console.log(event);\r\n  console.log(event.target);\r\n}\r\n\r\nfunction handleInput(event) {\r\n  console.log(\"handleInput(event) 실행\");\r\n  console.log(event.target);\r\n  console.log(event.target.name);\r\n  console.log(event.target.value);\r\n  userId.value = event.target.value; //양방향 바인딩 효과를 준다\r\n}\r\n\r\nfunction handleLink() {\r\n  console.log(\"handleLink\");\r\n}\r\n\r\nfunction handleForm() {\r\n  console.log(\"handleForm\");\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam02Watch\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">UserId</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"userId\">\r\n          </div>\r\n      </div>\r\n      <hr/>\r\n      <form>      \r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.name\"> <!-- product 객체 안에 name 속성 -->\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Company</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.company\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Price</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" v-model.number=\"product.price\">\r\n          </div>\r\n        </div>\r\n      </form> \r\n      <hr/>\r\n      <button @click=\"handleButton\" class=\"btn btn-info btn-sm\">product 객체 변경</button>     \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\n\r\n//반응형 속성 선언\r\nconst userId = ref(\"\");\r\nconst product = ref({\r\n  name: \"\",\r\n  compnay: \"\",\r\n  price: 0\r\n});\r\n\r\n//값 타입의 반응형 속성 감시 설정\r\nwatch(userId, (newUserId, oldUserId) => {\r\n  console.group(\"userId 변경 감시\");\r\n  console.log(\"newUserId: \", newUserId);\r\n  console.log(\"oldUserId:\", oldUserId);\r\n  console.groupEnd();\r\n});\r\n\r\n//객체 타입의 반응형 속성 감시 설정\r\nwatch(product, \r\n  (newProduct, oldProduct) => { //반응형 속성 객체의 값 자체를 바꾸기 위한 것\r\n    console.group(\"product 변경 감시\");\r\n    console.log(\"newProduct: \", newProduct);\r\n    console.log(\"oldProduct:\", oldProduct);\r\n    console.groupEnd();\r\n  },\r\n  {deep: true}  \r\n);\r\n\r\n//객체 타입의 반응형 속성 일부 감시 설정\r\nwatch(() => product.value.name, (newName, oldName) => {\r\n  console.group(\"product 객체의 name 속성 변경 감시\");\r\n  console.log(\"newName: \", newName);\r\n  console.log(\"oldName:\", oldName);\r\n  console.groupEnd();\r\n});\r\n\r\n//멀티 반응형 속성 감시 설정\r\nwatch([userId, product], ([newUserId, newProduct], [oldUserId, oldProduct]) => {\r\n  console.group(\"멀티 반응형 속성 감시 설정\");\r\n  console.log(\"newName: \", [newUserId, newProduct]);\r\n  console.log(\"oldName:\", [oldUserId, oldProduct]);\r\n  console.groupEnd();\r\n}, {deep: true});\r\n\r\nfunction handleButton() {\r\n  product.value = {\r\n    name: \"\",\r\n    compnay: \"\",\r\n    price: 0\r\n  };\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userId","ref","handleBtn1","console","log","handleBtn2","message","event","target","handleInput","name","value","handleLink","handleForm","__exports__","product","compnay","price","handleButton","watch","newUserId","oldUserId","group","groupEnd","newProduct","oldProduct","deep","newName","oldName"],"sourceRoot":""}